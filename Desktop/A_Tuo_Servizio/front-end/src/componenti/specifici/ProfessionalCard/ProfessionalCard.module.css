/* src/componenti/specifici/ProfessionalCard/ProfessionalCard.module.css */

.cardContenitore {
  display: flex;
  gap: 1.5rem; /* 24px */
  background-color: var(--colore-bianco);
  border-radius: 12px;
  padding: 1.5rem; /* 24px */
  box-shadow: 0px 4px 12px rgba(41, 78, 114, 0.08); /* mockup: colore #294E72, 8% opacità */
  transition: box-shadow 0.2s ease-in-out;
  /* Per l'hover, si potrebbe aggiungere una classe :hover direttamente qui se non si usa JS per questo.
     Tuttavia, se si volesse un controllo più fine o basato su JS, una classe dedicata sarebbe meglio.
     Per semplicità, usiamo :hover qui.
  */
}

.cardContenitore:hover {
  box-shadow: 0px 6px 16px rgba(43, 78, 114, 0.12); /* mockup: colore #2B4E72, 12% opacità */
}

.fotoWrapper {
  flex-shrink: 0;
}

.fotoProfilo {
  width: 80px;
  height: 80px;
  border-radius: 50%;
  object-fit: cover;
}

.fotoPlaceholder {
  width: 80px;
  height: 80px;
  border-radius: 50%;
  background-color: var(--colore-primario);
  color: var(--colore-bianco);
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 2rem; /* Adattato per le iniziali */
  font-weight: bold;
  text-transform: uppercase; /* Assicura che le iniziali siano maiuscole */
}

.infoWrapper {
  display: flex;
  flex-direction: column;
  flex-grow: 1;
  gap: 0.3rem; /* Spazio leggero tra righe di testo */
}

.nomeProfessionista { /* Applicata a h4 */
  font-family: var(--font-titoli);
  font-weight: 600; /* Semibold */
  font-size: 20px;
  color: var(--colore-testo-principale);
  margin: 0 0 0.1rem 0;
}

.specializzazione { /* Applicata a Paragrafo */
  font-family: var(--font-corpo);
  font-size: 14px;
  color: var(--colore-testo-secondario);
  margin: 0 0 0.3rem 0;
}

.badgesWrapper {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
  margin: 0.3rem 0;
}

.badgeSingolo {
  font-family: var(--font-corpo);
  font-weight: 600; /* Semibold */
  font-size: 10px;
  background-color: #E0F2F1; /* mockup: rgba(106, 192, 178, 0.15) o #E0F2F1 (simile a Verde Acqua Chiaro con opacità) */
  color: var(--colore-primario); /* mockup: Colore Primario (#2B4E72) */
  padding: 3px 8px; /* mockup: 2px 8px, aumentato leggermente per leggibilità */
  border-radius: 100px; /* Per badge completamente arrotondati */
}

.valutazioneWrapper {
  display: flex;
  align-items: center;
  gap: 0.4rem; /* mockup: 0.5rem, leggermente ridotto */
  margin: 0.3rem 0;
}

.stellaIcona {
  color: #FFC107; /* Giallo per le stelle */
  font-size: 18px;
  letter-spacing: 1px; /* Per spaziare le stelle unicode */
}

.stellaVuota { /* Specifico per le stelle vuote, se si usa un carattere diverso o colore */
  color: #E0E0E0; /* Grigio chiaro per stelle vuote */
}

.stelleTestoRecensioni { /* Rinominata da .testoRecensioni per coerenza con ProfessionalCard.tsx */
  font-family: var(--font-corpo);
  font-size: 12px;
  color: var(--colore-testo-secondario);
}

.localita { /* Applicata a Paragrafo */
  font-family: var(--font-corpo);
  font-size: 14px;
  color: var(--colore-testo-secondario);
  margin: 0.3rem 0 0.75rem 0;
}

.localita span { /* Per la distanza, se presente */
  margin-left: 0.5rem; /* Spazio tra località e distanza */
  /* Potrebbe avere uno stile leggermente diverso, es. font-style: italic; */
}

.tagline { /* Applicata a Paragrafo */
  font-family: var(--font-corpo);
  font-size: 14px;
  color: #555555; /* Grigio scuro, ma non nero pieno */
  line-height: 1.6;
  margin: 0.3rem 0 1rem 0;
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
  min-height: calc(1.6em * 2); /* Per riservare spazio per 2 linee (14px * 1.6 * 2) */
}

.bottoneVediProfiloWrapper {
  margin-top: auto; /* Spinge il bottone in fondo */
  align-self: flex-start;
}

.bottoneVediProfilo {
  /* Il componente Bottone con variante="secondario" dovrebbe già avere gli stili corretti.
     Questa classe è per eventuali sovrascritture. Ad esempio, se si volesse un padding diverso:
     padding: 8px 16px;
  */
}

/* Media Query per Responsività */
@media (max-width: 600px) {
  .cardContenitore {
    flex-direction: column;
    align-items: center; /* Centra gli elementi quando sono in colonna */
  }

  .infoWrapper {
    text-align: center; /* Centra il testo */
    align-items: center; /* Centra gli elementi flessibili (come i badges, stelle) */
  }

  .valutazioneWrapper {
    justify-content: center; /* Centra le stelle e il testo delle recensioni */
  }

  .bottoneVediProfiloWrapper {
    align-self: stretch; /* Fa estendere il wrapper del bottone */
  }

  .bottoneVediProfilo {
    /* Per fare in modo che il bottone stesso si estenda,
       il componente Bottone avrebbe bisogno di una prop tipo `fullWidth={true}`
       o una classe specifica che imposti `width: 100%` sul <button> interno.
       Se il componente Bottone non ha questa opzione, si può tentare di forzarlo così,
       ma non è l'ideale se il componente Bottone ha padding/border propri.
    */
    width: 100%; /* Fa sì che il bottone (se è un blocco o inline-block) occupi la larghezza del wrapper */
  }
}
